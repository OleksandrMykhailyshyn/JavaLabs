/*
* 1. Згідно з індивідуальним завданням напишіть програму (з використанням об’єктно-орієнтованого підходу), що відповідає наступним вимогам:
• Програма визначає і опрацьовує задані числа Фібоначчі (1, 1, 2, 3, 5, … ) або Люка (1, 3, 4, 7, 11, …).
* Номер числа та інші вхідні дані користувач має можливість передати через командний рядок, або в іншому випадку вводить з клавіатури.
• Створіть клас, який містить дані про номер та значення числа Фібоначчі або Люка, методи доступу до даних та інші методи,
* відповідно до індивідуального завдання.
• У головній функції оголосіть об’єкти або масив об’єктів створеного класу, які зберігають та опрацьовують введені дані.
• Програма виводить на екран вхідні дані і результати обчислень та перевірок із відповідними підказками.
• Скомпілюйте та запустіть програму через командний рядок та за допомогою обраного середовища розробки.
2. Продокументуйте програму з п. 1 з використанням JavaDoc і згенеруйте на основі нього документацію.
* */
// 14. Визначити, які числа серед перших N чисел Люка можна задати у формі w*w*w-1 (на 1 менше ніж певний куб).


package myPackage;

import java.util.Scanner;

/**
 * Клас Main - основний клас програми
 * @author Михайлишин Олександр
 */
public class Main
{
    /**
     * Пустий конструктор
     */
    public Main() {}
    /**
     * Створити, заповнити і вивести на екран масив чисел Люка
     * @param size розмір масиву
     * @return - масив об'єктів класу {@link Luka}
     */
    static Luka[] CreateArrayOfObjects(int size)
    {
        Luka[] Array = new Luka[size]; // масив об'єктів
        Array[0] =  new Luka(2,1); // задання перших 2 чисел Люка
        Array[1] = new Luka(1,2);
        for (int i = 2; i < size; i++) // заповнення масиву відповідними даними
        {
            Array[i] = new Luka(Array[i-1].getData() + Array[i-2].getData(), i+1);
        }
        System.out.println("Luka`s numbers: ");
        for (int i = 0; i < size; i++) // вивід масиву на екран
        {
            System.out.println("Number: "+Array[i].getNumber()+" Data: "+Array[i].getData());
        }
        return Array;
    }

    /**
     * Задання N
     * @return N - кількість чисел Люка які потрібно перевірити за умовою в {@link Main#Check(Luka[], int)}
     */
    static int setN()
    {
        System.out.print("\nEnter the N: ");
        Scanner myScanner = new Scanner(System.in);
        return myScanner.nextInt(); // N
    }

    /**
     * Перевірка умови w*w*w-1 = число Люка і вивести результати на екран, w - натуральне число
     * @param Array масив чисел Люка
     * @param N кількість перевіряємих чисел Люка
     */
    static void Check(Luka[] Array, int N)
    {
        System.out.println("\nResult: ");
        for (int i = 0; i < N; i++) // алгоритм перевірки
        {
            for (int w = 1; ; w++)
            {
                if ((long) w*w*w - 1 == Array[i].getData())
                {
                    System.out.println(Array[i].getData());
                }
                else if ((long) w*w*w - 1 > Array[i].getData()) // додаткова умова для скорочення роботи алгоритму
                {
                    break;
                }
            }

        }
    }

    /**
     * Основний метод програми
     * @param args значення командного рядка
     */
    public static void main(String[] args)
    {
        Luka[] Array = CreateArrayOfObjects(90);
        int N = setN(); // кількість чисел для перевірки
        Check(Array,N);
    }
}